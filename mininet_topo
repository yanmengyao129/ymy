"""Custom topology example

Two directly connected switches plus a host for each switch:

   host --- switch --- switch --- host

Adding the 'topos' dict with a key/value pair to generate our newly defined
topology enables one to pass in '--topo=mytopo' from the command line.
"""
from mininet.link import TCLink,Intf
from mininet.topo import Topo

class MyTopo( Topo ):
    "Simple topology example."

    def __init__( self ):
        "Create custom topo."
       
        # Initialize topology
        Topo.__init__( self )
        s1=[]
        s2=[]
        s3=[]
 
        sw=self.addSwitch( 's{}'.format(1) )
        s1.append(sw)

        for i in range(2):
            sw=self.addSwitch( 's{}'.format(i+2) )
            s2.append(sw)
 
        for i in range(4):
            sw=self.addSwitch( 's{}'.format(i+4) )
            s3.append(sw)
"""Custom topology example

Two directly connected switches plus a host for each switch:

   host --- switch --- switch --- host

Adding the 'topos' dict with a key/value pair to generate our newly defined
topology enables one to pass in '--topo=mytopo' from the command line.
"""
from mininet.link import TCLink,Intf
from mininet.topo import Topo

class MyTopo( Topo ):
    "Simple topology example."

    def __init__( self ):
        "Create custom topo."
       
        # Initialize topology
        Topo.__init__( self )
        s1=[]
        s2=[]
        s3=[]
 
        sw=self.addSwitch( 's{}'.format(1) )
        s1.append(sw)

        for i in range(2):
            sw=self.addSwitch( 's{}'.format(i+2) )
            s2.append(sw)
 
        for i in range(4):
            sw=self.addSwitch( 's{}'.format(i+4) )
            s3.append(sw)


        sw1=s1[0]
        for sw2 in s2:
            self.addLink(sw2,sw1)

        
        sw2=s2[0]
        for sw3 in s3[0:2]:
            self.addLink(sw3,sw2)

        sw2=s2[1]
        for sw3 in s3[2:4]:
            self.addLink(sw3,sw2)
       
        count = 1
        for sw3 in s3:
            for i in range(2):
                host = self.addHost('h{}'.format(count) )
                self.addLink(sw3,host,cls=TCLink)
                count+=1



topos = { 'mytopo': ( lambda: MyTopo() ) }



        sw1=s1[0]
        for sw2 in s2:
            self.addLink(sw2,sw1)

        for i in range(0,2,2):
            for sw2 in s2[0:1]:
                for sw3 in s3[i:i+1]:
                    self.addLink(sw3,sw2)
       
        count = 1
        for sw3 in s3:
            for i in range(2):
                host = self.addHost('h{}'.format(count) )
                self.addLink(sw3,host,cls=TCLink)
                count+=1



topos = { 'mytopo': ( lambda: MyTopo() ) }

